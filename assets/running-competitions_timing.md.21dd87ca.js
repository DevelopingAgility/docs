import{_ as e,c as i,o as t,a as n}from"./app.37006fb0.js";const f=JSON.parse('{"title":"Tracking session timing","description":"","frontmatter":{},"headers":[{"level":2,"title":"Timing visibility for judges","slug":"timing-visibility-for-judges","link":"#timing-visibility-for-judges","children":[{"level":3,"title":"How Estimated Times are determined","slug":"how-estimated-times-are-determined","link":"#how-estimated-times-are-determined","children":[]}]}],"relativePath":"running-competitions/timing.md"}'),s={name:"running-competitions/timing.md"},o=n('<h1 id="tracking-session-timing" tabindex="-1">Tracking session timing <a class="header-anchor" href="#tracking-session-timing" aria-hidden="true">#</a></h1><p>When a work order is generated, an estimated time for when each routine will be perform is calculated. This is shown in the &quot;ETR&quot; column (<em>Estimated Time of Routine</em>) in the work order PDFs.</p><p>You will also see when suggested times for a judges refresher/restroom break should occur.</p><p>As the competition coordinator you can use this information to keep track of your session&#39;s overall progress and know how early or late a session is running.</p><h2 id="timing-visibility-for-judges" tabindex="-1">Timing visibility for judges <a class="header-anchor" href="#timing-visibility-for-judges" aria-hidden="true">#</a></h2><p>When judges are using electronic score entry, a timing indicator will be shown on the score entry screen.</p><p>If a session is running more than a few minutes late, a timing warning be shown indicating how many minutes behind the session is. This will be visible to all judges as a way of encouraging them to work a little more efficiently.</p><p>Similarly, as soon as one judge has entered their scores for a routine, all other judges will see a a 20 second countdown timer on their submit button. If the countdown time expires, the button will change colour to orange to indicate they are running late.</p><h3 id="how-estimated-times-are-determined" tabindex="-1">How Estimated Times are determined <a class="header-anchor" href="#how-estimated-times-are-determined" aria-hidden="true">#</a></h3><p>Under the hood, here&#39;s what happens.</p><ol><li>We start with the competition start time for the session. If no start time exists, we fall back to the general warmup time instead. If no times exist, we can&#39;t produce an estimated time.</li><li>We then determine the duration of a routine from the level definition, and add time for gymnasts to transition to/from the floor to determine when each routine should start. <ul><li>Any scratched routines will be ignored.</li></ul></li><li>The transition times are set at 60 seconds per routine when there are single panels in operation, and 45 seconds when judging panels are alternating (i.e. 2 panels, 1 floor)</li><li>Every 2 hours, we add a judges rest break.</li><li>We determine a suggested time for that break based on a few simple rules <ul><li>If a rotation starts less than 15 minutes before the break, we bring the break forward to the before start of the rotation</li><li>If a rotation ends less than 25 minutes after the break, we delay the break until the end of the rotation</li><li>Otherwise we take the break mid-rotation</li></ul></li></ol><h4 id="considerations" tabindex="-1">Considerations <a class="header-anchor" href="#considerations" aria-hidden="true">#</a></h4><p>It&#39;s common for the initial routines in a session to take a little longer as the judges find their rhythm and align their judging, and more so early in a competition season. While that time can often be caught up as the session progress, it can also be a pattern of behaviour.</p><p>We would encourage head judges to work with their panels to not fall more than 5 minutes behind.</p><p>We would also encourage competition coordinators to include some buffer time (10-15 minutes) in their session plans to allow for unexpected events such as injuries and excessive delays that can occur with split judging panels.</p>',15),a=[o];function r(l,d,h,m,u,c){return t(),i("div",null,a)}const p=e(s,[["render",r]]);export{f as __pageData,p as default};
